================================================================================
def
================================================================================

@spec env() :: atom()
def env do
  # env is not available on bootstrapping, so set a :dev default
  Mix.State.get(:env, :dev)
end


--------------------------------------------------------------------------------

(source_file
  (statement
    (expr
      (unary_op
        (expr
          (call
            (identifier)
            (expr
              (binary_op
                (expr
                  (qualified_call
                    (identifier)
                    (args)))
                (expr
                  (qualified_call
                    (identifier)
                    (args))))))))))
  (statement
    (expr
      (call
        (identifier)
        (expr
          (identifier))
        (do_block
          (comment)
          (expr
            (dot_call
              (module)
              (identifier)
              (args
                (expr
                  (atom))
                (expr
                  (atom))))))))))

================================================================================
def with guard
================================================================================

def trim_trailing(string) when is_binary(string) do
  trim_trailing(string, byte_size(string))
end

--------------------------------------------------------------------------------

(source_file
  (statement
    (expr
      (call
        (identifier)
        (expr
          (binary_op
            (expr
              (qualified_call
                (identifier)
                (args
                  (expr
                    (identifier)))))
            (expr
              (qualified_call
                (identifier)
                (args
                  (expr
                    (identifier)))))))
        (do_block
          (expr
            (qualified_call
              (identifier)
              (args
                (expr
                  (identifier))
                (expr
                  (qualified_call
                    (identifier)
                    (args
                      (expr
                        (identifier)))))))))))))

================================================================================
def with multiline guard
================================================================================

defp ascii_printable_guarded?([char | rest], counter)
     # 7..13 is the range '\a\b\t\n\v\f\r'. 32..126 are ASCII printables.
     when is_integer(char) and
            ((char >= 7 and char <= 13) or char == ?\e or (char >= 32 and char <= 126)) do
  ascii_printable_guarded?(rest, decrement(counter))
end

--------------------------------------------------------------------------------

(source_file
  (statement
    (expr
      (call
        (identifier)
        (expr
          (binary_op
            (expr
              (qualified_call
                (identifier)
                (args
                  (expr
                    (list
                      (expr
                        (binary_op
                          (expr
                            (identifier))
                          (expr
                            (identifier))))))
                  (expr
                    (identifier)))))
            (comment)
            (expr
              (binary_op
                (expr
                  (qualified_call
                    (identifier)
                    (args
                      (expr
                        (identifier)))))
                (expr
                  (block
                    (expr
                      (binary_op
                        (expr
                          (binary_op
                            (expr
                              (block
                                (expr
                                  (binary_op
                                    (expr
                                      (binary_op
                                        (expr
                                          (identifier))
                                        (expr
                                          (integer))))
                                    (expr
                                      (binary_op
                                        (expr
                                          (identifier))
                                        (expr
                                          (integer))))))))
                            (expr
                              (binary_op
                                (expr
                                  (identifier))
                                (expr
                                  (char))))))
                        (expr
                          (block
                            (expr
                              (binary_op
                                (expr
                                  (binary_op
                                    (expr
                                      (identifier))
                                    (expr
                                      (integer))))
                                (expr
                                  (binary_op
                                    (expr
                                      (identifier))
                                    (expr
                                      (integer))))))))))))))))
        (do_block
          (expr
            (qualified_call
              (identifier)
              (args
                (expr
                  (identifier))
                (expr
                  (qualified_call
                    (identifier)
                    (args
                      (expr
                        (identifier)))))))))))))
